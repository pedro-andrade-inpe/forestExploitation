

ForestExploitation = Model{
    cut_cycle = 30, -- years
    ypl = 10, -- years
    mcd = 6, -- minimum cut diameter (class number)
    damage_exp = 0.13, -- 13%
    cut_vol = 3.334, -- m3
    reman_vol = 0.9822, -- m3
    seeds_vol = 1.7466, -- m3
    max_vol = 30, -- m3/ha
    reman_vol = 30, -- m3/ha
    ida_dt = Choice{"autor1", "autor2"}, -- colocar todos os autores
    bir = Choice{"autor1", "autor2"},
    dth = Choice{"autor1", "autor2"},
    shapefile = Mandatory("File"),
    finalTime = 90, -- ou seria 60? => 0, 30, 60
    max_exp = function(self) return self.max_vol / self.cut_vol end,
    ida_dt_rate = function(class)
        return 0.1
        -- ...
    end,
    bir_rate = function()
        return 0.1
        -- ...
    end,
    dth_rate = function(class)
        return 0.1
        -- ...
    end,
    init = function(model)
        model.cell = Cell{
            sum_mcd_9 = function(cell)
                local sum = 0

                for i = model.mcd, 9 do
                   sum = sum + cell:get_trees(i)
                end

                return sum
            end,
            --  VINICIUS: sao funcoes mesmo ou se sao variaveis computadas no inicio da simulacao?
            cut_trees = function(cell)
                return cell:sum_mcd_9() * 80.48
            end,
            seeds = function(cell)
                return cell:sum_mcd_9() * 15.17
            end,
            --...
            growth_rate = function(cell, class)
                return 0.1
            end,
            get_trees = function(cell, class)
                return cell["CLASS"..class.."_SUM"]
            end,
            set_trees = function(cell, class, amount)
                cell["CLASS"..class.."_SUM"] = amount
            end,
            growth = function(cell)
                for i = 8, 1, -1 do -- go from the greater class to avoid growing two times
                    local initial_quantity = cell:get_trees(i)
                    local quantity = initial_quantity * 0.1 * cell:growth_rate(i) * model.ypl

                    cell:set_trees(i, quantity)
                end
            end,
            birth = function(cell)
                local quantity = cell:sum_mcd_9() * (1 + model:bir_rate()) ^ model.ypl
                cell:set_trees(cell:get_trees(1) + quantity)
            end,
            exploitation = function(cell)
                local trees_cut = 0

                cell:collateral_damage(trees_cut)
            end,
            collateral_damage = function(cell, trees_cut)
            end,
            natural_mortality = function(cell)
                cell:natural_mortality_young()
                cell:natural_mortality_old()
            end,
            natural_mortality_young = function(cell)
            end,
            natural_mortality_old = function(cell)
            end,
        }

        model.cs = CellularSpace{
            instance = model.cell,
            file = model.shapefile
        }

        model.timer = Timer{
            -- qual dos dois eventos tera prioridade no ano de exploracao?
            Event{priority = "low", period = model.cut_cycle, action = function()
                model.cs:exploitation()
            end},
            Event{priority = "high", period = model.ypl, action = function()
                model.cs:birth()
                model.cs:growth()
                model.cs:natural_mortality()
            end}
        }
    end
}
